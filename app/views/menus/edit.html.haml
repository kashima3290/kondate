%div
  = render "shared/header"
  = form_with model: @menu, local: true do |form|
    .ui.form.grid.container{style: "margin-top: 10px;"}
      .required.inline.field
        %label 写真
      - if @menu.errors.details[:menu_images].present?
        .ui.left.pointing.red.basic.label
          = "画像を少なくとも一枚追加してください"
      .doubling.four.column.row
        - @menu.menu_images.each.with_index do |menu_image,index|
          .column
            .ui.card
              .image
                = image_tag menu_image.image.url, class: "ui medium rounded image change-image", id: "preview-img#{index}", style: "height: 230px;"
              .contents
                .ui.bottom.attached.buttons{id: "preview-btn#{index}"}
                  %label.ui.green.button{for: "preview-file#{index}"}
                    = "変更"
                  .or
                  .ui.red.button{onclick: "deleteImg(event, #{index})"}
                    = "削除"

        - if @no_menu_count_array.present?
          - @no_menu_count_array.each do |i|
            .column
              .ui.card
                .image
                  = image_tag 'noimage.png', class: "ui medium rounded image change-image", id: "preview-img#{i}", style: "height: 230px;"
                  = form.label :menu_images, '画像を追加', class: 'ui bottom attached button', for: "preview-file#{i}", id: "preview-btn#{i}"
                  = form.file_field :image, type: 'file', class: 'preview-file', id: "preview-file#{i}", style: "display: none;", onchange: "addImg(event, #{i})", name: "menu[menu_images_attributes][#{i}][image]"

        = form.fields_for :menu_images, @menu.menu_images do |image|
          = image.file_field :image, type: 'file', class: 'preview-file', id: "preview-file#{image.index}", style: "display: none;", onchange: "addImg(event, #{image.index})", name: "menu[menu_images_attributes][#{image.index}][image]"

    .ui.stackable.three.column.grid.container
      .column
        .ui.form
          .required.inline.field
            %label 料理名
            - if @menu.errors.details[:name].present?
              .ui.left.pointing.red.basic.label
                = "料理名の入力をしてください"
          = form.text_field :name, placeholder: "ハンバーグ~"
      .column
        .ui.form
          .inline.field
            %label ジャンル
          = form.select :genre, ['主食', '主菜', '野菜', '一品もの', 'デザート', 'その他', '外食'], {include_blank: 'ジャンル選択'}, class: "ui search dropdown"
      .column
        .ui.form
          .inline.field
            %label 関連URI
          = form.text_field :site, placeholder: "http//~"
    .ui.grid.container
      .sixteen.wide.column
        .ui.form
          .field
            %label メモ
            = form.text_area :text, placeholder: "材料：〜"
        = form.submit "更新", class: "fluid ui green button", style: "margin-top: 30px;"

:javascript
  // 画像追加
  function addImg(event, targetId) {
    let file = event.target.files[0];
    let reader = new FileReader();
    let previewImage = document.getElementById("preview-img"+targetId);
    // src入れ替え
    reader.onload = function(event) {
      previewImage.setAttribute("src", reader.result);
    };
    reader.readAsDataURL(file);
    // ボタン変更
    let imgAddBtn = document.getElementById("preview-btn"+targetId);
    imgAddBtn.remove(); // 元のボタンを削除
    // ボタン要素
    let changeBottons = `
                          <div class="contents">
                            <div class="ui bottom attached buttons" id="preview-btn${targetId}">
                              <label class="ui green button" for="preview-file${targetId}">変更</label>
                              <input type="file" style="display:none;" class="preview-file" id="preview-file${targetId}" onchange="addImg(event, ${targetId})"></input>
                              <div class="or"></div>
                              <div class="ui red button" onclick="deleteImg(event, ${targetId})">削除</div>
                            </div>
                          </div>
                        `
    // 要素追加
    document.getElementById("preview-img"+targetId).insertAdjacentHTML("afterend", changeBottons)
  }

  // 画像削除
  function deleteImg(event, targetId){
    let previewImage = document.getElementById("preview-img"+targetId);
    // input file の中身を削除
    let file = document.getElementById("preview-file"+targetId);
    file.value = "";
    // src入れ替え
    previewImage.setAttribute("src", "/assets/noimage-288e2c511c45ae528e62240a9f64d532cd0f0b859847ab5c3d72fe3a0a898ef6.png");
    // ボタン変更
    let imgAddBtn = document.getElementById("preview-btn"+targetId);
    imgAddBtn.remove(); // 元のボタンを削除
    // ボタン要素
    let changeBottons = `
                          <label class="ui bottom attached button" id="preview-btn${targetId}" for="preview-file${targetId}">画像を追加</lavel>
                        `
    // 要素追加
    document.getElementById("preview-img"+targetId).insertAdjacentHTML("afterend", changeBottons)
  }
